---
- name: Playbook to recreate the RHCOS ISO
  hosts: localhost
  gather_facts: false

  pre_tasks: 
  
  - name: Ensure mkisofs and rsync is installed
    yum:
      name: "{{ packages }}"
    become: true
    delegate_to: localhost
    vars:
      packages:
      - rsync
      - genisoimage

  tasks:
  - block:
    - name: Create the download url for ppc64le
      set_fact:
        dl_url: 'https://mirror.openshift.com/pub/openshift-v{{ ocp_version.split(".")[0] }}/ppc64le/dependencies/rhcos/{{ ocp_version.split(".")[0] }}.{{ ocp_version.split(".")[1] }}/{{ ocp_version }}/{{ iso_name_ppc64 }}'
        my_iso: "{{ iso_name_ppc64 }}"
        my_cksum: "{{ iso_checksum_ppc64 }}"
      when: arch == 'ppc64le'
 
    - name: Create the download url for x86_64
      set_fact:
        dl_url: 'https://mirror.openshift.com/pub/openshift-v{{ ocp_version.split(".")[0] }}/dependencies/rhcos/{{ ocp_version.split(".")[0] }}.{{ ocp_version.split(".")[1] }}/{{ ocp_version }}/{{ iso_name }}'
        my_iso: "{{ iso_name }}"
        my_cksum: "{{ iso_checksum }}"
      when: arch == 'x86_64'
 
    - name: Check if ISO is already available
      stat:
        path: /tmp/{{ my_iso }}
        checksum_algorithm: sha256
        get_checksum: yes
      register: iso_file

    - name: Get the original ISO
      get_url:
        url: "{{ dl_url }}"
        dest: /tmp
        checksum: sha256:{{ my_cksum }}
      when: not iso_file.stat.exists or iso_file.stat.checksum != my_cksum

    - name: Mount ISO
      mount:
        src: /tmp/{{ my_iso }}
        path: /mnt/iso
        fstype: iso9660
        opts: ro,noauto
        state: mounted
      become: true

    - name: Copy contents of iso
      synchronize:
        src: /mnt/iso/
        dest: /tmp/rhcos-iso/

- name: Create the required ISOs
  hosts: all
  serial: 1
  gather_facts: false

  tasks:

  - name: Build our additional variables
    set_fact:
      cmd_args: ""

  - name: Add ip with dhcp config
    set_fact:
      cmd_args: "{{ cmd_args }} ip=dhcp "
    when: dhcp is defined and dhcp

  - name: Add ip address info
    set_fact:
      cmd_args: "{{ cmd_args }} ip={{ ipv4 }}::{{ gateway }}:{{ netmask }}:{{ inventory_hostname }}:{{ interface }}:none"
    when: dhcp is not defined or not dhcp

  - name: Add install DNS
    set_fact:
      cmd_args: "{{ cmd_args }} nameserver={{ item }}"
    with_items: "{{ dns }}"
    when: (dns is defined) and ((dhcp is not defined) or not dhcp)

  - name: Add ip address info for second NIC
    set_fact:
      cmd_args: "{{ cmd_args }} ip={{ nic2_ipv4 }}::{{ gateway2 }}:{{ netmask2 }}:{{ inventory_hostname }}:{{ interface2 }}:none"
    when: nic2_ipv4 is defined and (not (dhcp | default(false)))

  - name: Add install device name
    set_fact:
      cmd_args: "{{ cmd_args }} coreos.inst.install_dev={{ install_drive | default(sda) }}"

  - name: Add custom location of ignition files
    set_fact:
      webserver_ignition_fullpath: "/{{ webserver_ignition_path }}/"
    when: webserver_ignition_path is defined

  - name: Add default location of ignition files
    set_fact:
      webserver_ignition_fullpath: "/"
    when: webserver_ignition_path is not defined

  - name: Add ignition_url
    set_fact:
      cmd_args: "{{ cmd_args }} coreos.inst.ignition_url=http://{{ webserver_url }}:{{ webserver_port | default(80) }}{{ webserver_ignition_fullpath }}{{ group_names[0] }}.ign"

  - block:
    - name: Replace the grub.cfg file
      template:
        src: grub.cfg-multi.j2
        dest: /tmp/rhcos-iso/boot/grub/grub.cfg
      become: true
      delegate_to: localhost

    - name: Create new ISO image for ppc64le
      command: >
           /usr/bin/mkisofs -U -A 'RHCOS-CustomIso' -V 'RHCOS-CustomIso' -volset 'RHCOS-CustomIso' -J -joliet-long -r -v -T
             -x ./lost+found -o /tmp/rhcos-install-{{ inventory_hostname_short }}.iso -chrp-boot .
      args:
        chdir: /tmp/rhcos-iso/
      become: true
      delegate_to: localhost
    when: arch == 'ppc64le'

  - block:
    - name: Replace the isolinux.cfg file
      template:
        src: isolinux.cfg-multi.j2
        dest: /tmp/rhcos-iso/isolinux/isolinux.cfg
      become: true
      delegate_to: localhost

    - name: Replace the grub.cfg file
      template:
        src: grub.cfg-multi.j2
        dest: /tmp/rhcos-iso/EFI/redhat/grub.cfg
      become: true
      delegate_to: localhost
    
    - name: Create new ISO image for x86_64
      command: >
           /usr/bin/mkisofs -U -A 'RHCOS-CustomIso' -V 'RHCOS-CustomIso' -volset 'RHCOS-CustomIso' -J -joliet-long -r -v -T 
             -x ./lost+found -o /tmp/rhcos_install-{{ inventory_hostname_short}}.iso -b isolinux/isolinux.bin  
             -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img 
             -no-emul-boot .
      args:
        chdir: /tmp/rhcos-iso/
      become: true
      delegate_to: localhost
    when: arch == 'x86_64'

- name: Cleanup tasks
  hosts: localhost
  gather_facts: false

  tasks:

  - block: 
    - name: Unmount ISO
      mount:
        path: /mnt/iso
        state: absent

    - name: Remove ISO copy
      file:
        path: /tmp/rhcos-iso
        state: absent
    become: true
...
